// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/bs-jest/src/jest.js";
import * as Rxjs from "rxjs";
import * as Curry from "bs-platform/lib/es6/curry.js";

var oneObs = Rxjs.Observable.create((function (obs) {
        obs.next(10);
        obs.complete();
        return /* () */0;
      }));

var twoObs = Rxjs.Observable.create((function (obs) {
        obs.next(100);
        obs.next(200);
        obs.complete();
        return /* () */0;
      }));

Jest.describe("Expect", (function (param) {
        return Jest.test("Sample test", (function (param) {
                      return Jest.Expect[/* toBe */2](3, Jest.Expect[/* expect */0](3));
                    }));
      }));

Jest.testAsync("Rx.create - Create observable using static method", undefined, (function (finish) {
        var obs = Rxjs.Observable.create((function (obs) {
                obs.next(20);
                obs.complete();
                return /* () */0;
              }));
        obs.subscribe((function (value) {
                return Curry._1(finish, Jest.Expect[/* toBe */2](20, Jest.Expect[/* expect */0](value)));
              }));
        return /* () */0;
      }));

Jest.testAsync("combineLatest2", undefined, (function (finish) {
        var testObs = Rxjs.combineLatest(twoObs, oneObs);
        testObs.subscribe((function (value) {
                return Curry._1(finish, Jest.Expect[/* toEqual */12](/* tuple */[
                                200,
                                10
                              ], Jest.Expect[/* expect */0](value)));
              }));
        return /* () */0;
      }));

Jest.testAsync("combineLatest6", undefined, (function (finish) {
        var testObs = Rxjs.combineLatest(oneObs, oneObs, oneObs, oneObs, oneObs, oneObs);
        testObs.subscribe((function (value) {
                return Curry._1(finish, Jest.Expect[/* toEqual */12](/* tuple */[
                                10,
                                10,
                                10,
                                10,
                                10,
                                10
                              ], Jest.Expect[/* expect */0](value)));
              }));
        return /* () */0;
      }));

export {
  oneObs ,
  twoObs ,
  
}
/* oneObs Not a pure module */
