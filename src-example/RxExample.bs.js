// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE

import * as Rxjs from "rxjs";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Operators$BsMarblejs from "../src/rx/Operators.bs.js";

var stream1 = Rxjs.Observable.create((function (obs) {
        obs.next(20);
        return /* () */0;
      }));

var subscription1 = stream1.subscribe((function (myVal) {
        return /* () */0;
      }));

var x = Operators$BsMarblejs.map((function (item) {
        return item + 20 | 0;
      }), stream1);

function opr1(param) {
  return Operators$BsMarblejs.map((function (item) {
                return item + 5 | 0;
              }), param);
}

var y = Operators$BsMarblejs.deferArray((function (param) {
        return /* array */[
                10,
                20
              ];
      }), Operators$BsMarblejs.withLatestFrom5(stream1, stream1, stream1, stream1, Operators$BsMarblejs.withLatestFrom4(stream1, stream1, stream1, Operators$BsMarblejs.withLatestFrom3(stream1, stream1, Operators$BsMarblejs.withLatestFrom2(stream1, Operators$BsMarblejs.take(100, Operators$BsMarblejs.catchError((function (_err, _caught) {
                                return stream1;
                              }), Operators$BsMarblejs.debounceTime(100, undefined, /* () */0, Operators$BsMarblejs.debounceTime(1000, Caml_option.some(scheduler), /* () */0, Operators$BsMarblejs.filteri((function (_x, _y) {
                                            return false;
                                          }), Operators$BsMarblejs.switchToArray((function (param) {
                                                return /* array */[10];
                                              }), Operators$BsMarblejs.switchMap((function (_x) {
                                                    return stream1;
                                                  }), Operators$BsMarblejs.map((function (x) {
                                                        return x + 5 | 0;
                                                      }), Operators$BsMarblejs.mapi((function (item, index) {
                                                            return (item + index | 0) + 4 | 0;
                                                          }), opr1(stream1)))))))))))))));

export {
  stream1 ,
  subscription1 ,
  x ,
  opr1 ,
  y ,
  
}
/* stream1 Not a pure module */
